#!/bin/bash

# For now execute this script in the git lsseq repo directory for this to work.

export LC_ALL=POSIX
unset OIC_IMAGE_EXTENSION

# When testing code locally, make sure you are getting the dev version of lsseq.
# tcsh: setenv PATH "~/code/lsseq:${PATH}"
# tcsh: setenv PATH `eval /etc/cleanpath $PATH`

# NOTE: To make sure the modification times of the testdir/cdir images are
# set properly for testing we need to force specific times on to the files
# as we can't rely on git to set these properly for us.
#
# How the timestamps were created:
# cd testdir/cdir
# ls ccc*.*.* > list.images
# vi list.images - then ordered it to be ccc01* ccc03* and ccc02* in the correct frame order
# initial.image.mtimes < list.images > custom.touch.images
# vi custom.touch.images - edit the times to make for different "oldest" and "newest" vs "median".
# source custom.touch.images

unalias lsseq
tmpArgs=/tmp/tmpTEST_LSSEQ.$$
OIC_REPO_DIR=`pwd`

cleanup() {
    /bin/rm $tmpArgs  > /dev/null 2>&1
    exit 0
}

trap cleanup INT

cd testdir/cdir
source custom.touch.images
cd ../..

cat << EOF > $tmpArgs
. --version
. -lRFC testdir
. -lReC testdir
. -lReoC testdir
. -RePC testdir
testdir
testdir *
testdir -l *
testdir/cdir
testdir/cdir .
testdir/cdir *
testdir/cdir -d *
testdir/cdir -c
testdir/cdir -e -R
testdir/cdir -e -R -P
testdir/cdir -fnative
testdir/cdir -fnuke
testdir/cdir -fshake
testdir/cdir -frv
testdir/cdir -fglob
testdir/cdir -i
testdir/cdir -M
testdir/cdir -o
testdir/cdir -p *
testdir/cdir -P *
testdir/cdir -r
testdir/cdir -t
testdir/cdir -t --time oldest
testdir/cdir -t --time median
testdir/cdir -Z
testdir/cdir -R $OIC_REPO_DIR/testdir/cdir/ $OIC_REPO_DIR/testdir/
testdir/cdir -R $OIC_REPO_DIR/testdir/cdir/
testdir/cdir -Ra
testdir/cdir -R -b --goodFrameMinSize 1K
testdir/cdir -1Rb
testdir/cdir -1RbC
testdir/cdir -Rbx
testdir/cdir -1CRbx
testdir/cdir -R -P -p -P -f rv -f glob -fnative -C -b
EOF

echo ------ Begin Tests ------ > $OIC_REPO_DIR/test_lsseq.out.new

i=1
while true; do
    # declare -a args=(`sed --silent -e "$i p" $tmpArgs`)
    declare -a args=(`sed -n -e "$i p" $tmpArgs`)
    if [ ${#args[@]} -eq 0 ]; then
        break;
    fi
    workingDir=${args[0]}
    args=(${args[@]:1})
    echo "" >> $OIC_REPO_DIR/test_lsseq.out.new
    echo ------ Test $i ------
    echo ------ Test $i ------ lsseq ${args[@]} ------ >> $OIC_REPO_DIR/test_lsseq.out.new
    cd $OIC_REPO_DIR/$workingDir
    $OIC_REPO_DIR/lsseq ${args[@]} >> $OIC_REPO_DIR/test_lsseq.out.new 2>&1
    i=$(expr $i + 1)
done

sed -e "1,$ s-$OIC_REPO_DIR-/...absPathToRepo.../lsseq-g" < $OIC_REPO_DIR/test_lsseq.out.new > /tmp/tmp$$
/bin/mv /tmp/tmp$$ $OIC_REPO_DIR/test_lsseq.out.new
